{"version":3,"sources":["Styles/NavBar.styles.js","Nav/NavBar.js","App.js","actions/index.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","whiteColor","FlexContainer","styled","div","AppHeader","Nav","HamBurger","Menu","open","MenuLinks","Link","Logo","a","ToggleButton","button","NavBar","useState","setOpen","counter","useSelector","state","counters","href","onClick","to","style","color","path","element","App","web3","accounts","setAccounts","chainid","setChainId","getBalance","SetGetBalanced","name","setName","distpatch","useDispatch","ContractAddress","useEffect","detectEthereumProvider","ethereum","Web3","window","currentProvider","on","eth","getAccounts","net","getId","networkId","chainId","Contract","ContractAbi","methods","call","ContractName","console","log","init","metamaskConnect","request","method","account","metaMaskDissconnect","_handleDisconnect","localStorage","clear","location","reload","getBalanced","balance","utils","fromWei","ethBalance","changeNetwork","params","x","BigNumber","plus","MAX_SAFE_INTEGER","display","type","onChange","event","target","value","hidden","toNumber","counterReducer","action","loggedReducer","rootReducers","combineReducers","logged","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db14cf90.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { \r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${props => (props.whiteColor ? 'rgb(40, 44, 52)' : 'white')};  \r\n    color: ${props => (props.whiteColor ? 'white' : 'black')};\r\n    width: 100vw; \r\n    height: 100vh;\r\n  }\r\n`\r\nexport const FlexContainer = styled.div`\r\n    width: 100%;\r\n    height: calc(100vh - 65px);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nexport const AppHeader = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n    padding: 0px 2em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    background: white;\r\n    border-bottom: 0.5px solid gray;\r\n`;\r\nexport const HamBurger = styled.div`\r\n    display: none;\r\n    flex-direction: column;  \r\n    border-radius: 5px;\r\n    margin-left:auto  ;\r\n    span {\r\n        height: 2px;\r\n        width: 25px;\r\n        background-color: black;\r\n        margin-bottom: 4px;\r\n    }\r\n    @media (max-width:786px) {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const Menu = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    @media (max-width:786px) {\r\n        overflow: hidden;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-height: ${({open})=>(open? \"300px\" : \"0px\")};\r\n        transition: max-height 0.3s ease-in;\r\n    }\r\n`;\r\n\r\nexport const MenuLinks = styled(Link)`\r\n    padding: 1em 1em;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    color: #7b7fda;\r\n    transition: all 0.3s ease-in;\r\n    &:hover {\r\n        color: tomato;\r\n    }`;\r\n\r\n\r\nexport const Logo =styled.a`\r\n    padding: 1em 0;\r\n    color: #7b7fda;\r\n    text-decoration: none;\r\n    font-weight: 800;\r\n    font-size: 1.2em;\r\n`;\r\n\r\nexport const ToggleButton = styled.button`\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 40%;\r\n    background-color: ${props => (props.whiteColor ? 'rgb(40, 44, 52)' : 'white')};  \r\n`;","import React,{useState} from \"react\";\r\nimport { \r\n    Nav,\r\n    HamBurger,\r\n    Menu,\r\n    MenuLinks,\r\n    Logo, \r\n    ToggleButton\r\n} from \"../Styles/NavBar.styles\";\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Routes,\r\n    Route    \r\n  } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    const [open, setOpen] = useState(false);\r\n    const counter = useSelector(state => state.counters)\r\n    return (\r\n        <Router>\r\n            <Nav>\r\n                <Logo href=\"\">\r\n                    Logo\r\n                </Logo>\r\n                <HamBurger onClick={ ()=>setOpen(!open)}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </HamBurger>\r\n                <Menu open={open}>\r\n                    <MenuLinks to=\"/\">Home</MenuLinks>\r\n                    <MenuLinks to=\"/about\">About</MenuLinks>\r\n                    <MenuLinks to=\"/product\">Product</MenuLinks>\r\n                    <MenuLinks to=\"/contact\">Contact</MenuLinks>\r\n                    <ToggleButton />\r\n                    <h3 style={{color:\"black\"}}>{counter}</h3>\r\n                </Menu>\r\n            </Nav>\r\n\r\n            <Routes>\r\n            <Route path=\"/about\" element={<h4>This is About Page</h4>}>               \r\n            </Route>\r\n            <Route path=\"/contact\" element={<h4>This is Contact Page</h4>}>               \r\n            </Route>\r\n            <Route path=\"/product\" element={<h4>This is Product Page</h4>}>            \r\n            </Route>\r\n            <Route path=\"/\" element={<h4>This is Home Page</h4>} />                \r\n            </Routes>\r\n\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n","import Web3 from \"web3\";\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {increment,decrement} from './actions';\r\nimport NavBar from \"./Nav/NavBar\";\r\nimport { AppHeader,FlexContainer,GlobalStyle } from \"./Styles/NavBar.styles\";\r\nimport ContractAbi from './Contract/ContractAbi.json';\r\n// import BscContract from './Contract/ContractAbi.json'\r\nimport { BigNumber } from \"bignumber.js\";\r\n\r\n\r\nfunction App() {\r\n  const [accounts,setAccounts] = useState('');\r\n  const [chainid,setChainId] = useState();\r\n  const [getBalance,SetGetBalanced] = useState(); \r\n  const [name,setName] = useState(); \r\n\r\n  const counter = useSelector(state => state.counters) \r\n\r\n  const distpatch = useDispatch();\r\n  var web3;\r\n  const ContractAddress = \"0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72\";\r\n  // const bscContractAddress = \"0xC434ff4C2e743d80adF5837029368Eb4dE270453\";\r\n\r\n  useEffect(() => {\r\n    async function init(){\r\n      var ethereum = await detectEthereumProvider();\r\n     var web3 = new Web3(window.ethereum);\r\n      web3.currentProvider.on(\"accountsChanged\", async function () {\r\n        let accounts = await web3.eth.getAccounts();\r\n        var networkId = await web3.eth.net.getId();\r\n        setAccounts(accounts);\r\n        setChainId(networkId);       \r\n      });\r\n      ethereum.on('chainChanged', (chainId) => {\r\n        setChainId(chainId)\r\n      });\r\n      var Contract = new web3.eth.Contract(ContractAbi,ContractAddress);\r\n      var ContractName = await Contract.methods.name().call();\r\n      setName(ContractName)\r\n      console.log(ContractName,'ContractName---------------')\r\n    }\r\n    init()\r\n  },[accounts])\r\n\r\n\r\n  var  metamaskConnect = async () =>{  \r\n    const ethereum = await detectEthereumProvider();\r\n    web3 = new Web3(window.ethereum);\r\n    const account = await ethereum.request({ method: 'eth_requestAccounts' });\r\n    setAccounts(account[0]);\r\n    const chainid = await web3.eth.net.getId();\r\n    setChainId(chainid)\r\n    console.log(web3.currentProvider,'currentProvider');  \r\n \r\n  }\r\n\r\n  var metaMaskDissconnect = async () => {\r\n    web3 = new Web3(window.ethereum);\r\n     await web3.currentProvider._handleDisconnect();\r\n     localStorage.clear();\r\n     setAccounts('')\r\n     setChainId('')\r\n     window.location.reload();\r\n  }\r\n \r\n  var getBalanced = async () => {\r\n    web3 = new Web3(window.ethereum);\r\n    var balance = await web3.eth.getBalance(accounts) \r\n    var ethBalance = await web3.utils.fromWei(balance,'ether')\r\n    SetGetBalanced(ethBalance);\r\n }\r\n\r\n const changeNetwork = async (chainId) => {\r\n  if (window.ethereum) {\r\n    try {\r\n       await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: chainId }],      \r\n      });\r\n    } catch (error) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n};\r\n\r\nlet x = new BigNumber(123).plus(10);\r\nconsole.log(x.MAX_SAFE_INTEGER,'BigNumber--------------',)\r\n\r\n  return (\r\n    <>   \r\n      <GlobalStyle whiteColor/>\r\n      <NavBar/> \r\n        <FlexContainer>\r\n        <AppHeader>        \r\n          {typeof window.web3 !== 'undefined' ?  \r\n          <>\r\n            'MetaMask is installed!'\r\n            <button style={{display:'block'}} onClick={metamaskConnect}>\r\n              Connect To MetaMask\r\n            </button>\r\n            <div>\r\n              Address:-{accounts !== 'undefined' && accounts}\r\n            </div>\r\n            <div>\r\n              Chain Id:-{chainid !== 'undefined' && chainid}\r\n            </div>  \r\n            {accounts !== '' && \r\n            <>\r\n              <button style={{display:'block'}} onClick={metaMaskDissconnect}>\r\n                Dissconnect From MetaMask   \r\n              </button> \r\n              <button style={{display:'block'}} onClick={getBalanced}>\r\n                Get Account Balanced  \r\n              </button> \r\n              {getBalance}\r\n                </>\r\n              }   \r\n              <h2>counter{counter}</h2>\r\n              <button onClick={()=> distpatch(increment())}>+</button>\r\n              <button onClick={()=> distpatch(decrement())}>-</button>\r\n\r\n    \r\n            <select onChange={(event)=>changeNetwork(event.target.value)}>\r\n              <option value=\"\" hidden>\r\n                Switch Newtork\r\n              </option>\r\n              <option value=\"0x1\">Ethereum Mainnet</option>\r\n              <option value=\"0x38\">BSC</option>\r\n              <option value=\"0x89\">Polygon</option>   \r\n            </select > \r\n              {x.toNumber()}\r\n              <div>\r\n                {name && name}\r\n              </div>\r\n        </>\r\n          :\r\n          'MetaMask is not installed!'          \r\n          }\r\n        </AppHeader>\r\n        </FlexContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const increment = () => {\r\n    return{\r\n        type: 'INCREMENT'\r\n    }\r\n}\r\n\r\nexport const decrement = () => {\r\n    return{\r\n        type: 'DECREMENT'\r\n    }\r\n}\r\n\r\nexport const toggle = () => {\r\n    return {\r\n        type: 'TOGGLE'\r\n    }\r\n}"," const counterReducer = (state = 0,action) => {\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","const loggedReducer = (state = false,action) => {\r\n    switch (action.type) {\r\n        case 'signIn':\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nexport default loggedReducer;","import counterReducer from \"./counter\";\r\nimport loggedReducer from \"./isLogged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducers = combineReducers({\r\n    counters: counterReducer,\r\n    logged: loggedReducer\r\n})\r\n\r\nexport default rootReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore,applyMiddleware,compose } from 'redux';\r\nimport rootReducers from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducers,\r\n              composeEnhancers(applyMiddleware(thunk))\r\n            );\r\n\r\n\r\nconsole.log(store.getState(),'store----')\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//************************** React Redux**********************************/\r\n//**************************Action****************************************/\r\n// const increment = () => {\r\n//     return {\r\n//       type: 'INCREMENT',\r\n//      }\r\n//   }\r\n\r\n//   const decrement = () => {\r\n//     return {\r\n//       type: 'DECREMENT',\r\n//      }\r\n//   }\r\n\r\n//**************************/REDUCER/***************************************/  \r\n// const counter = (state = 0,action) => {\r\n//   switch(action.type){\r\n//     case 'INCREMENT':\r\n//           return state + 1;\r\n//     case 'DECREMENT':\r\n//       return state - 1;\r\n//       default: console.log('Switch case error')\r\n//   }\r\n// }\r\n\r\n// let store = createStore(counter);\r\n\r\n//*******************************/Display/********************************/\r\n// store.subscribe(() =>console.log(store.getState()));\r\n\r\n//*****************************/Dispatch/****************************** */\r\n// store.dispatch(increment());\r\n// store.dispatch(decrement());\r\n"],"sourceRoot":""}