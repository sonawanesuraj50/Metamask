{"version":3,"sources":["Styles/NavBar.styles.js","Nav/NavBar.js","App.js","actions/index.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","whiteColor","FlexContainer","styled","div","AppHeader","Nav","HamBurger","Menu","open","MenuLinks","a","Logo","ToggleButton","button","NavBar","useState","setOpen","href","onClick","App","useEffect","detectEthereumProvider","web3","Web3","window","ethereum","currentProvider","on","eth","getAccounts","accounts","setAccounts","console","warn","counter","useSelector","state","counters","loggedInn","logged","distpatch","useDispatch","chainid","setChainId","getBalance","SetGetBalanced","metamaskConnect","request","method","account","getChainId","log","metaMaskDissconnect","_handleDisconnect","localStorage","clear","location","reload","getBalanced","balance","utils","fromWei","ethBalance","style","display","type","counterReducer","action","loggedReducer","rootReducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fd24d3a.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: ${props => (props.whiteColor ? 'rgb(40, 44, 52)' : 'white')};  \r\n    color: ${props => (props.whiteColor ? 'white' : 'black')};\r\n    width: 100vw; \r\n    height: 100vh;\r\n  }\r\n`\r\nexport const FlexContainer = styled.div`\r\n    width: 100%;\r\n    height: calc(100vh - 65px);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nexport const AppHeader = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n    padding: 0px 2em;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    background: white;\r\n    border-bottom: 0.5px solid gray;\r\n`;\r\nexport const HamBurger = styled.div`\r\n    display: none;\r\n    flex-direction: column;  \r\n    border-radius: 5px;\r\n    margin-left:auto  ;\r\n    span {\r\n        height: 2px;\r\n        width: 25px;\r\n        background-color: black;\r\n        margin-bottom: 4px;\r\n    }\r\n    @media (max-width:786px) {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const Menu = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    @media (max-width:786px) {\r\n        overflow: hidden;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        max-height: ${({open})=>(open? \"300px\" : \"0px\")};\r\n        transition: max-height 0.3s ease-in;\r\n    }\r\n`;\r\n\r\nexport const MenuLinks = styled.a`\r\n    padding: 1em 1em;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    color: #7b7fda;\r\n    transition: all 0.3s ease-in;\r\n    &:hover {\r\n        color: tomato;\r\n    }`;\r\n\r\n\r\nexport const Logo =styled.a`\r\n    padding: 1em 0;\r\n    color: #7b7fda;\r\n    text-decoration: none;\r\n    font-weight: 800;\r\n    font-size: 1.2em;\r\n`;\r\n\r\nexport const ToggleButton = styled.button`\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 40%;\r\n    background-color: ${props => (props.whiteColor ? 'rgb(40, 44, 52)' : 'white')};  \r\n`;","import React,{useState} from \"react\";\r\nimport { \r\n    Nav,\r\n    HamBurger,\r\n    Menu,\r\n    MenuLinks,\r\n    Logo, \r\n    ToggleButton\r\n} from \"../Styles/NavBar.styles\";\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <Nav>\r\n            <Logo href=\"\">\r\n                Logo\r\n            </Logo>\r\n            <HamBurger onClick={ ()=>setOpen(!open)}>\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n            </HamBurger>\r\n            <Menu open={open}>\r\n                <MenuLinks href=\"\">Home</MenuLinks>\r\n                <MenuLinks href=\"\">About</MenuLinks>\r\n                <MenuLinks href=\"\">Product</MenuLinks>\r\n                <MenuLinks href=\"\">Contact</MenuLinks>\r\n                <ToggleButton />\r\n            </Menu>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n","import Web3 from \"web3\";\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {increment} from './actions';\r\nimport { decrement } from './actions';\r\nimport NavBar from \"./Nav/NavBar\";\r\nimport { AppHeader,FlexContainer,GlobalStyle } from \"./Styles/NavBar.styles\";\r\n\r\n\r\nfunction App() {\r\n  useEffect( async () => {\r\n    const ethereum = await detectEthereumProvider();\r\n    web3 = new Web3(window.ethereum);\r\n    web3.currentProvider.on(\"accountsChanged\", async function () {\r\n      let accounts = await web3.eth.getAccounts();\r\n      setAccounts(accounts)\r\n      \r\n    });\r\n    console.warn(accounts,'----------------------------');\r\n  },[])\r\n\r\n  const counter = useSelector(state => state.counters)\r\n  const loggedInn = useSelector(state => state.logged)\r\n  const distpatch = useDispatch();\r\n\r\n  let web3;\r\n  const [accounts,setAccounts] = useState('');\r\n  const [chainid,setChainId] = useState();\r\n  const [getBalance,SetGetBalanced] = useState();\r\n\r\n  web3 = new Web3(window.ethereum);\r\n\r\n  var  metamaskConnect = async () =>{  \r\n    const ethereum = await detectEthereumProvider();\r\n    const account = await ethereum.request({ method: 'eth_requestAccounts' });\r\n    setAccounts(account[0]);\r\n    const chainid = await web3.eth.getChainId();\r\n    setChainId(chainid)\r\n    const acc = await web3.eth.getAccounts()\r\n    console.log(web3.currentProvider,'currentProvider');    \r\n\r\n  }\r\n\r\n  var metaMaskDissconnect = async () => {\r\n     await web3.currentProvider._handleDisconnect();\r\n     localStorage.clear();\r\n     setAccounts('')\r\n     setChainId('')\r\n     window.location.reload();\r\n  }\r\n \r\n  var getBalanced = async () => {\r\n    var balance = await web3.eth.getBalance(accounts) \r\n    var ethBalance = await web3.utils.fromWei(balance,'ether')\r\n    SetGetBalanced(ethBalance);\r\n }\r\n\r\n\r\n  return (<>\r\n   \r\n    <GlobalStyle whiteColor/>\r\n    <NavBar/> \r\n      <FlexContainer>\r\n      <AppHeader>        \r\n        {typeof window.web3 !== 'undefined' ?  \r\n        <>\r\n          'MetaMask is installed!'\r\n          <button style={{display:'block'}} onClick={metamaskConnect}>\r\n            Connect To MetaMask\r\n          </button>\r\n          <div>\r\n            Address:-{accounts !== 'undefined' && accounts}\r\n          </div>\r\n          <div>\r\n            Chain Id:-{chainid !== 'undefined' && chainid}\r\n          </div>   \r\n          <button style={{display:'block'}} onClick={metaMaskDissconnect}>\r\n            Dissconnect From MetaMask   \r\n          </button> \r\n          {accounts !== '' && \r\n          <>\r\n            <button style={{display:'block'}} onClick={getBalanced}>\r\n              Get Account Balanced  \r\n            </button> \r\n            {getBalance}\r\n              </>\r\n            }   \r\n            <h2>counter{counter}</h2>\r\n            <button onClick={()=> distpatch(increment())}>+</button>\r\n            <button onClick={()=> distpatch(decrement())}>-</button>\r\n\r\n            Logdin{loggedInn}\r\n        </>\r\n        :\r\n        'MetaMask is not installed!'          \r\n        }\r\n      </AppHeader>\r\n      </FlexContainer>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const increment = () => {\r\n    return{\r\n        type: 'INCREMENT'\r\n    }\r\n}\r\n\r\nexport const decrement = () => {\r\n    return{\r\n        type: 'DECREMENT'\r\n    }\r\n}"," const counterReducer = (state = 0,action) => {\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","const loggedReducer = (state = false,action) => {\r\n    switch (action.type) {\r\n        case 'signIn':\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nexport default loggedReducer;","import counterReducer from \"./counter\";\r\nimport loggedReducer from \"./isLogged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducers = combineReducers({\r\n    counters: counterReducer,\r\n    logged: loggedReducer\r\n})\r\n\r\nexport default rootReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore,applyMiddleware,compose } from 'redux';\r\nimport rootReducers from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport NavBar from './Nav/NavBar';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducers,\r\n              composeEnhancers(applyMiddleware(thunk))\r\n            );\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//************************** React Redux**********************************/\r\n//**************************Action****************************************/\r\n// const increment = () => {\r\n//     return {\r\n//       type: 'INCREMENT',\r\n//      }\r\n//   }\r\n\r\n//   const decrement = () => {\r\n//     return {\r\n//       type: 'DECREMENT',\r\n//      }\r\n//   }\r\n\r\n//**************************/REDUCER/***************************************/  \r\n// const counter = (state = 0,action) => {\r\n//   switch(action.type){\r\n//     case 'INCREMENT':\r\n//           return state + 1;\r\n//     case 'DECREMENT':\r\n//       return state - 1;\r\n//       default: console.log('Switch case error')\r\n//   }\r\n// }\r\n\r\n// let store = createStore(counter);\r\n\r\n//*******************************/Display/********************************/\r\n// store.subscribe(() =>console.log(store.getState()));\r\n\r\n//*****************************/Dispatch/****************************** */\r\n// store.dispatch(increment());\r\n// store.dispatch(decrement());\r\n"],"sourceRoot":""}