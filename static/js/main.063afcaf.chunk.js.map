{"version":3,"sources":["App.js","actions/index.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["App","useEffect","a","detectEthereumProvider","web3","Web3","window","ethereum","currentProvider","on","eth","getAccounts","accounts","setAccounts","console","warn","counter","useSelector","state","counters","loggedInn","logged","distpatch","useDispatch","useState","chainid","setChainId","getBalance","SetGetBalanced","metamaskConnect","request","method","account","getChainId","log","metaMaskDissconnect","_handleDisconnect","localStorage","clear","location","reload","getBalanced","balance","utils","fromWei","ethBalance","className","style","display","onClick","type","counterReducer","action","loggedReducer","rootReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mkBAqGeA,MA5Ff,WACEC,oBAAS,sBAAE,sBAAAC,EAAA,sEACcC,MADd,eAETC,EAAO,IAAIC,IAAKC,OAAOC,WAClBC,gBAAgBC,GAAG,kBAAxB,sBAA2C,4BAAAP,EAAA,sEACpBE,EAAKM,IAAIC,cADW,OACrCC,EADqC,OAEzCC,EAAYD,GAF6B,4CAK3CE,QAAQC,KAAKH,EAAS,gCARb,2CAST,IAEF,IAIIR,EAJEY,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACrCC,EAAYH,aAAY,SAAAC,GAAK,OAAIA,EAAMG,UACvCC,EAAYC,cAGlB,EAA+BC,mBAAS,IAAxC,mBAAOZ,EAAP,KAAgBC,EAAhB,KACA,EAA6BW,qBAA7B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAkBC,EAAlB,KAEAxB,EAAO,IAAIC,IAAKC,OAAOC,UAEvB,IAAKsB,EAAe,uCAAG,gCAAA3B,EAAA,sEACEC,MADF,cACfI,EADe,gBAECA,EAASuB,QAAQ,CAAEC,OAAQ,wBAF5B,cAEfC,EAFe,OAGrBnB,EAAYmB,EAAQ,IAHC,SAIC5B,EAAKM,IAAIuB,aAJV,cAIfR,EAJe,OAKrBC,EAAWD,GALU,UAMHrB,EAAKM,IAAIC,cANN,eAOrBG,QAAQoB,IAAI9B,EAAKI,gBAAgB,mBAPZ,4CAAH,qDAWhB2B,EAAmB,uCAAG,sBAAAjC,EAAA,sEACjBE,EAAKI,gBAAgB4B,oBADJ,OAEvBC,aAAaC,QACbzB,EAAY,IACZa,EAAW,IACXpB,OAAOiC,SAASC,SALO,2CAAH,qDAQnBC,EAAW,uCAAG,8BAAAvC,EAAA,sEACIE,EAAKM,IAAIiB,WAAWf,GADxB,cACZ8B,EADY,gBAEOtC,EAAKuC,MAAMC,QAAQF,EAAQ,SAFlC,OAEZG,EAFY,OAGhBjB,EAAeiB,GAHC,2CAAH,qDAOf,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAE0B,qBAAhBxC,OAAOF,KACf,gEAEE,wBAAQ2C,MAAO,CAACC,QAAQ,SAAUC,QAASpB,EAA3C,iCAGA,4CACyB,cAAbjB,GAA4BA,KAExC,6CACyB,cAAZa,GAA2BA,KAExC,wBAAQsB,MAAO,CAACC,QAAQ,SAAUC,QAASd,EAA3C,uCAGc,KAAbvB,GACD,qCACE,wBAAQmC,MAAO,CAACC,QAAQ,SAAUC,QAASR,EAA3C,kCAGCd,KAGD,yCAAYX,KACZ,wBAAQiC,QAAS,kBAAK3B,ECrFxB,CACF4B,KAAM,eDoFF,eACA,wBAAQD,QAAS,kBAAK3B,EChFxB,CACF4B,KAAM,eD+EF,eAEA,wCAAW9B,QAIf,kC,QElFO+B,EAXS,WAAuB,IAAtBjC,EAAqB,uDAAb,EAAEkC,EAAW,uCAC1C,OAAOA,EAAOF,MACV,IAAK,YACD,OAAOhC,EAAQ,EACnB,IAAK,YACD,OAAOA,EAAQ,EACnB,QACI,OAAOA,ICEJmC,EATO,WAA2B,IAAZD,EAAW,uCAC5C,MACS,WADDA,EAAOF,MCQJI,EALMC,YAAgB,CACjCpC,SAAUgC,EACV9B,OAAQgC,ICENG,EAAQC,YAAYH,EAAahD,OAAOoD,8BAAgCpD,OAAOoD,gCAIrFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAASA,EAAnB,SACA,cAAC,EAAD,QAGFM,SAASC,eAAe,W","file":"static/js/main.063afcaf.chunk.js","sourcesContent":["import './App.css';\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport React, { useState,useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {increment} from './actions';\r\nimport { decrement } from './actions';\r\n\r\n\r\nfunction App() {\r\n  useEffect( async () => {\r\n    const ethereum = await detectEthereumProvider();\r\n    web3 = new Web3(window.ethereum);\r\n    web3.currentProvider.on(\"accountsChanged\", async function () {\r\n      let accounts = await web3.eth.getAccounts();\r\n      setAccounts(accounts)\r\n      \r\n    });\r\n    console.warn(accounts,'----------------------------');\r\n  },[])\r\n\r\n  const counter = useSelector(state => state.counters)\r\n  const loggedInn = useSelector(state => state.logged)\r\n  const distpatch = useDispatch();\r\n\r\n  let web3;\r\n  const [accounts,setAccounts] = useState('');\r\n  const [chainid,setChainId] = useState();\r\n  const [getBalance,SetGetBalanced] = useState();\r\n\r\n  web3 = new Web3(window.ethereum);\r\n\r\n  var  metamaskConnect = async () =>{  \r\n    const ethereum = await detectEthereumProvider();\r\n    const account = await ethereum.request({ method: 'eth_requestAccounts' });\r\n    setAccounts(account[0]);\r\n    const chainid = await web3.eth.getChainId();\r\n    setChainId(chainid)\r\n    const acc = await web3.eth.getAccounts()\r\n    console.log(web3.currentProvider,'currentProvider');    \r\n\r\n  }\r\n\r\n  var metaMaskDissconnect = async () => {\r\n     await web3.currentProvider._handleDisconnect();\r\n     localStorage.clear();\r\n     setAccounts('')\r\n     setChainId('')\r\n     window.location.reload();\r\n  }\r\n \r\n  var getBalanced = async () => {\r\n    var balance = await web3.eth.getBalance(accounts) \r\n    var ethBalance = await web3.utils.fromWei(balance,'ether')\r\n    SetGetBalanced(ethBalance);\r\n }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\r\n        {typeof window.web3 !== 'undefined' ?  \r\n        <>\r\n          'MetaMask is installed!'\r\n          <button style={{display:'block'}} onClick={metamaskConnect}>\r\n            Connect To MetaMask\r\n          </button>\r\n          <div>\r\n            Address:-{accounts !== 'undefined' && accounts}\r\n          </div>\r\n          <div>\r\n            Chain Id:-{chainid !== 'undefined' && chainid}\r\n          </div>   \r\n          <button style={{display:'block'}} onClick={metaMaskDissconnect}>\r\n            Dissconnect From MetaMask   \r\n          </button> \r\n          {accounts !== '' && \r\n          <>\r\n            <button style={{display:'block'}} onClick={getBalanced}>\r\n              Get Account Balanced  \r\n            </button> \r\n            {getBalance}\r\n              </>\r\n            }   \r\n            <h2>counter{counter}</h2>\r\n            <button onClick={()=> distpatch(increment())}>+</button>\r\n            <button onClick={()=> distpatch(decrement())}>-</button>\r\n\r\n            <h2>Logdin{loggedInn}</h2>\r\n\r\n        </>\r\n        :\r\n        'MetaMask is not installed!'          \r\n        }\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const increment = () => {\r\n    return{\r\n        type: 'INCREMENT'\r\n    }\r\n}\r\n\r\nexport const decrement = () => {\r\n    return{\r\n        type: 'DECREMENT'\r\n    }\r\n}"," const counterReducer = (state = 0,action) => {\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return state + 1;\r\n        case 'DECREMENT':\r\n            return state - 1;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default counterReducer;","const loggedReducer = (state = false,action) => {\r\n    switch (action.type) {\r\n        case 'signIn':\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nexport default loggedReducer;","import counterReducer from \"./counter\";\r\nimport loggedReducer from \"./isLogged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducers = combineReducers({\r\n    counters: counterReducer,\r\n    logged: loggedReducer\r\n})\r\n\r\nexport default rootReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport rootReducers from './reducers';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(rootReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n    <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//************************** React Redux**********************************/\r\n// //Action\r\n// const increment = () => {\r\n//     return {\r\n//       type: 'INCREMENT',\r\n//      }\r\n//   }\r\n\r\n//   const decrement = () => {\r\n//     return {\r\n//       type: 'DECREMENT',\r\n//      }\r\n//   }\r\n\r\n// // REDUCER  \r\n// const counter = (state = 0,action) => {\r\n//   switch(action.type){\r\n//     case 'INCREMENT':\r\n//           return state + 1;\r\n//     case 'DECREMENT':\r\n//       return state - 1;\r\n//       default: console.log('Switch case error')\r\n//   }\r\n// }\r\n\r\n// let store = createStore(counter);\r\n\r\n// //Display\r\n// store.subscribe(() =>console.log(store.getState()));\r\n\r\n// //Dispatch\r\n// store.dispatch(increment());\r\n// store.dispatch(decrement());\r\n"],"sourceRoot":""}